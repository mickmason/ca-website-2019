@import 'framework/variables';
@import 'framework/mixins';
@import 'framework/grid';
	
@import 'vendor/normalize.scss';

html {
  font-size: 14px;
  line-height: 1.42857142857143;
}

@media screen and (min-width: 320px) {
  html { 
    font-size: calc(14px + 6 * ((100vw - 320px) / (1920 - 320)));
  }
}
@media screen and (min-width: $xx-large) {
  html {
    font-size: 20px;
  }
}
body {
  font-family: azo-sans-web, sans-serif;
}
h1, h2, h3, h4, h5 {
  font-weight: 300;
  line-height: 1.3;
  margin-bottom: 0;
}
h1 {
  font-size: 2.0rem;
  margin-top: 1.5rem;
}
h2 {
  font-size: 1.5rem;
  margin-top: 1.5rem;
}
h3 {
  font-size: 1.25rem;
  margin-top: 1.5rem;
}
h4 {
  font-size: 1rem;
  margin-top: 1.5rem;
}
h5 {
  font-size: 1rem;
  margin-top: 1.5rem;
}
p {
	margin-top: 1.5rem;
	margin-bottom: $gutter/8;
	
}
@media screen and (min-width: 1200px) {
  /*	h1 { font-size: 2.5rem }
  	h2 { font-size: 2.0rem }
  	h3 { font-size: 1.5rem }
  	h4 { font-size: 1.25rem }
  	h5 { font-size: 1rem }*/
}
a {
  color: inherit;
}
/* Utils */
.is-label {
  @include makeLabel();
}

header {
	@include makeRow($direction: row, $justify: space-between, $align: stretch);
  box-shadow: 0 0 4px 0 rgba(0, 0, 0, 0.4);
	.header-logo, .header-menu {
		display: flex;
		flex-direction: row;
		justify-content: flex-start;
		flex-wrap: nowrap;
		align-items: center;
		padding-top: 0.75rem;
		padding-bottom: 0.75rem;
	}
	.header-logo {
		flex: 1 1 0;
		padding-left: 	$gutter/2;
		padding-right: 	$gutter/2;
		> h1 {
			font-family: 'Helvetica Neue', sans-serif;
			font-size: 1rem;
			margin: 0;
			a {
				color: #303030;
				text-decoration: none;
			}
			span {
				font-weight: 400;
			}
		}
	}
	.header-menu {
		flex: 1 1 0;
		padding-left: 1rem;
		padding-right: 1rem;
		display: flex;
		flex-direction: row;
		justify-content: flex-end;
		flex-wrap: nowrap;
		align-items: center;
	}
	@media screen and (min-width: 767px) {
		.header-logo {
			max-width: calc(100% / 3);
		}
		.header-menu {
			max-width: calc(100% / 7);
		}
	}
	@media screen and (min-width: 1024px) {
    flex-direction: row;
		.header-logo {
			flex-basis: 50%;
			max-width: 50%;
		}
		.header-menu {
			flex-basis: 50%;
			max-width: 50%;
		}
	}
}

footer {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: stretch;
  background-color: #303030;
  color: #fff;
	
	.footer-col {
		flex: 1 1 0;
		padding-left: 1rem;
		padding-right: 1rem;
	}
	
	@media screen and (min-width: 1024px) {
		flex-direction: row;
		.footer-col {
			flex-basis: 30%;
			max-width: 30%;
		}
	}
	@media screen and (min-width: 1220px) {
		.footer-col {
			max-width: calc(100% / 5);
		}
	}
}
.hero-row {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: stretch;
  height: 100vh;
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
	.hero-block {
		flex: 1 1 0;
		padding-left: 1rem;
		padding-right: 1rem;
	}
	@media screen and (min-width: 1024px) {
    flex-direction: row;
		.hero-block {
			flex-basis: 100%;
			max-width: 100%;
		}
	}
}
/* Inner page */
@import 'components/bc-inner-nav';
.bc-inner-nav {
	@include makeCols(10);
	& li &-label {
		display: inline;
		font-size: 0.8rem;
		font-weight: 300;
		text-decoration: none;
		text-align: right;
		padding-right: $gutter/2;
		
	}
	& li &-icon {
		padding-left: $gutter/2;
		
	}
	& &-dropdown {
		font-size: 0.8rem;
		&.active {
			padding-top: 		$gutter/8;
			padding-bottom: $gutter/12;
			overflow: visible;
		}
		a {
			padding-top: 		$gutter/10;
			padding-bottom: $gutter/10;
			&.active {
				position: relative;
				&::before {
					content: "";
					position: absolute;
					left: -0.57rem;
					top: 50%;
					transform: translateY(-50%);
					border-width: 			0.285rem;
					border-color: 			transparent;
					border-style: 			solid;
					border-left-color: 	rgba($black, 0.8);
				}
			}
		}
	}
	li {
		&:hover, &:active, &:focus {
			> a:not(.bc-inner-nav-icon) {
				background-color: transparent;
			}
			> .bc-inner-nav-label {
				background-color: transparent;
			}		
		}
	}
	@media screen and (min-width: $tablet) {
		> li {
			
			.bc-inner-nav-label, .bc-inner-nav-icon {
				align-self: flex-end;
			}
			.bc-inner-nav-icon {
				display: none;
			}
		}
		li .bc-inner-nav-dropdown {
			min-width: 0;
			height: auto;
			display: inline-flex;
			flex-direction: row;
			align-items: center;
			overflow: visible;
			> li {
				padding-right: $gutter/4; 
				a {
					padding-top: 0;
					padding-bottom: 0;
				}
			}
			a {
				&.active {
					&:before {
						top: auto;
						left: 50%;
						transform: translateX(-50%);
						bottom: -0.5rem;
						border-left-color: $white;
						border-bottom-color: $black;	
					}
				}
			}
		}
	}
	@media screen and (min-width: $desktop) {
		& &-label {
			font-size: 0.72rem;
		}
	}
}
/* Template Breadcrumbs */
@import 'components/bc-breadcrumbs';
/* -- Template Breadcrumbs -- */
/* Projects page */


/** Template: two-column **/
.bc-main {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: stretch;
}
@media screen and (min-width: 1024px) {
  .bc-main {
    flex-direction: row;
  }
}
.bc-main .bc-sidebar, .bc-main .bc-main-body {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}
.bc-main .bc-sidebar {
  flex: 1 1 0;
  padding-left: 1rem;
  padding-right: 1rem;
}
@media screen and (min-width: 1024px) {
  .bc-main .bc-sidebar {
    flex-basis: 25%;
    max-width: 25%;
  }
}
.bc-main .bc-main-body {
  flex: 1 1 0;
  padding-left: 1rem;
  padding-right: 1rem;
}
@media screen and (min-width: 1024px) {
  .bc-main .bc-main-body {
    flex-basis: 75%;
    max-width: 75%;
  }
}
.bc-main .bc-main-body h1:first-child {
  margin-top: 0;
}
/** - Template: two-column - **/
/**  **/
.bc-content-container {
	max-width: 80rem; 
	margin-left: 	auto;
	margin-right: auto;
}
.bc-content-row {
	&.cards-row {
		padding-top: 		$gutter/1.5;
		padding-bottom: $gutter/1.5;
		flex-direction: row;
		flex-wrap: wrap;
	}
	
	@media screen and (min-width: $desktop) {
		&.cards-row {
			padding-top: 		$gutter;	
			padding-bottom: $gutter;	
		}
	}
}

@import 'components/bc-cards';
.bc-card {
	@include makeCols($cols: 10);
	flex-basis: 100% ;
	max-width: 100% ;
	&--slide-up {
		.card-separator {
			margin-top: 		$gutter/2;
			margin-bottom: 	$gutter/2;
			margin-left: 		0.25rem;
			width: 					0.875rem;
			flex: 					1 1 0;
			border-left: 		2px dotted rgba($black, 0.24); 
			position: relative;
			&:before {
				content: "";
				position: absolute;
				width: 		0.857rem;
				height: 	0.857rem;
				left: 		-2.358rem;
				top: 			50%;
				border: 	0.72rem solid $white;
				background-color: rgba($black, 0.36);;
				transform: translate(50%, -50%) rotate(45deg);
			}
		}
		.project-info, project-link {
			flex: 0 1 0;
		}
		.project-link {
			@include makeFlexbox($direction: row, $justify: space-between);
			.project-link-text {
				flex: 1 1 0;
			}
			.svg-icon {
				flex: 1 1 0;
				max-height: 1.25rem;
				max-width: 	1.25rem;
			}
		}
	}
	@media screen and (min-width: 500px) {
		flex-basis: 50%;
		max-width: 	50%;
		
		.bc-card-content {
			.bc-card-title {
				font-size: 1rem;
			}
			.bc-card-subtitle, .project-link {
				font-size: 0.8rem;
			}
			.project-link {
				.svg-icon {
					max-height: 1rem;
					max-width: 	1rem;
				}	
			}
		}
		&--slide-up { 
			.card-separator {
				&::before {
					width: 		0.8rem;
					height: 	0.8rem;
					left: 		-1.8rem;
					border-width: 0.48rem;	
				}
				
			}
		}
		
	}
	@media screen and (min-width: 600px) {
		flex-basis: 33.333%;
		max-width: 	33.333%;
	}
	@media screen and (min-width: $tablet) {
		& &-content {
			.bc-card-title {
				font-size: 1rem;
			}
			.bc-card-subtitle, .project-link {
				font-size: 0.8rem;
			}
			.project-link {
				.svg-icon {
					max-height: 1rem;
					max-width: 	1rem;
				}
			}
		}
		
	}
	@media screen and (min-width: $desktop) {
		flex-basis: 25%;
		max-width: 	25%;
	}
	@media screen and (min-width: $med) {
		flex-basis: 20%;
		max-width: 	20%;
	}
	@media screen and (min-width: $laptop) {
		flex-basis: 20%;
		max-width: 	20%;
	}
}

.brand-yellow-scheme {
	.bc-breadcrumbs {
		.bc-breadcrumbs-links {
			&::before {	background-color: $brand-yellow;	}
		}
	}
	.bc-card {
		&--slide-up {
			.card-separator { 
				&:before {	background-color: $brand-yellow;	}
			}
		}
	}
}//.brand-yellow-scheme
.brand-red-scheme {
	.bc-breadcrumbs {
		& &-links {
			&::before {	background-color: $brand-yellow;	}
		}
	}
	.bc-card {
		&--slide-up {
			.card-separator { 
				&:before {	background-color: $brand-yellow;	}
			}
		}
	}
}//.brand-yellow-scheme